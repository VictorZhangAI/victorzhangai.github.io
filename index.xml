<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VZstless</title>
    <link>https://vzstless.moe/</link>
    <description>Recent content on VZstless</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>VZstless</copyright>
    <lastBuildDate>Fri, 31 Jan 2025 12:49:19 +0800</lastBuildDate>
    <atom:link href="https://vzstless.moe/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LEC19</title>
      <link>https://vzstless.moe/p/lec19/</link>
      <pubDate>Fri, 31 Jan 2025 12:49:19 +0800</pubDate>
      <guid>https://vzstless.moe/p/lec19/</guid>
      <description>&lt;h2 id=&#34;slides&#34;&gt;Slides&lt;/h2&gt;&#xA;&lt;p&gt;what if write an OS in HLL?&lt;br&gt;&#xA;less faults, but with less performance and less chance to interact with bottom of a computer&lt;br&gt;&#xA;tricky to measure trade-offs, must compare with production of C kernel&lt;br&gt;&#xA;kernel threads -&amp;gt; goroutines&lt;br&gt;&#xA;syscall: SYSENTER, SYSEXIT&lt;br&gt;&#xA;solve the heap exhaustion rule&lt;br&gt;&#xA;Go is easy to analyze heap bounds&lt;br&gt;&#xA;HLL truly simplified code&lt;br&gt;&#xA;concurrency in Go is easy&lt;br&gt;&#xA;compare apps through biscuit &amp;amp; Linux&lt;br&gt;&#xA;Go&amp;rsquo;s GC has no many large pauses but many small delays&lt;br&gt;&#xA;many programs could tolerate the pause rate of GC&lt;br&gt;&#xA;Go is slower but competitive&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE18</title>
      <link>https://vzstless.moe/p/xv6-lecture18/</link>
      <pubDate>Fri, 31 Jan 2025 07:48:44 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture18/</guid>
      <description>&lt;h2 id=&#34;handout-18&#34;&gt;Handout 18&lt;/h2&gt;&#xA;&lt;p&gt;virtual machine: simulation of a computer&lt;br&gt;&#xA;accuracy may be 100%&lt;br&gt;&#xA;software simulation: like qemu, but may slow&lt;br&gt;&#xA;run the instructions in real CPU but whole in user mode&lt;br&gt;&#xA;VM trap handler&lt;br&gt;&#xA;trap-and-emulate approach&lt;br&gt;&#xA;handle privileged instructions into virtual state&lt;br&gt;&#xA;VMM must ensure that guest only accesses its own memory and must remap guest physical addresses&lt;br&gt;&#xA;turn page faults into operation&lt;br&gt;&#xA;each CPU in non-root mode or in root mode&lt;br&gt;&#xA;extended page table contains user memory space&lt;br&gt;&#xA;2 layers of addr&lt;br&gt;&#xA;CPU forces exit to the guest, passes interrupts to the host&lt;br&gt;&#xA;Dune: use VMX to run a Linux process&lt;br&gt;&#xA;a loadable kernel module&lt;br&gt;&#xA;additional functionality like r/w&lt;br&gt;&#xA;bottom line: faster for some Linux syscalls&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE17</title>
      <link>https://vzstless.moe/p/xv6-lecture17/</link>
      <pubDate>Thu, 30 Jan 2025 14:55:36 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture17/</guid>
      <description>&lt;h2 id=&#34;handout-17&#34;&gt;Handout 17&lt;/h2&gt;&#xA;&lt;p&gt;What should a kernel do?&lt;br&gt;&#xA;traditional: a &amp;ldquo;monolithic&amp;rdquo; kernel abstraction(UNIX, Linux, xv6)&lt;br&gt;&#xA;abstraction leads to security&lt;br&gt;&#xA;monolithic kernel may lead to a big, complex and buggy system, may lead to many thoughts in designing the whole kernel&lt;br&gt;&#xA;lots of code is needed to execute a pipe&lt;/p&gt;&#xA;&lt;p&gt;microkernel: make kernel simpler enough&lt;br&gt;&#xA;move most techniques out of the kernel, to the user space&lt;br&gt;&#xA;most bugs are at drivers, move them out to the user space so the kernel will be more modifiable&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE16</title>
      <link>https://vzstless.moe/p/xv6-lecture16/</link>
      <pubDate>Wed, 29 Jan 2025 17:25:38 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture16/</guid>
      <description>&lt;h2 id=&#34;handout-16&#34;&gt;Handout 16&lt;/h2&gt;&#xA;&lt;p&gt;OS kernel use VM in creative ways, even benefit from VM&lt;br&gt;&#xA;trap, prot, unprot, dirty, map&lt;br&gt;&#xA;mmap(): map memory into user space&lt;br&gt;&#xA;mprotect(): change the permission of mapping&lt;br&gt;&#xA;munmap(), sigaction()&lt;br&gt;&#xA;kernel asks VM waht to do, generate signal, run user handler, kernel returns to user program, continue or restart the previous action&lt;br&gt;&#xA;bake a large sqrt table by a single page&lt;br&gt;&#xA;real-time GC Algorithm&lt;/p&gt;&#xA;&lt;p&gt;real-time: cheap and large to allocate&lt;br&gt;&#xA;cost: pointer reside, difficult to run collector and the program at the same time&lt;br&gt;&#xA;adding instructions could solve user-level VM problems&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE15</title>
      <link>https://vzstless.moe/p/xv6-lecture15/</link>
      <pubDate>Mon, 27 Jan 2025 08:59:50 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture15/</guid>
      <description>&lt;h2 id=&#34;handout-15&#34;&gt;Handout 15&lt;/h2&gt;&#xA;&lt;p&gt;crashes may lead to problem that won&amp;rsquo;t show immediately&lt;br&gt;&#xA;make syscalls atomic(all-or-nothing)&lt;br&gt;&#xA;ext3: less waiting, reduced writes, ordered data mode&lt;/p&gt;&#xA;&lt;p&gt;batch update blocks, commit the current open transaction&lt;br&gt;&#xA;performance: multiple syscalls, multiple transactions&lt;/p&gt;&#xA;&lt;p&gt;the crash may forget last few ops&lt;br&gt;&#xA;log is circular: SB T4 T5 T2 T3&lt;br&gt;&#xA;before re-use, must write log superblock with offset/seq of resulting now-oldest transaction in log&lt;/p&gt;&#xA;&lt;p&gt;logging could help with &amp;ldquo;fail-stop&amp;rdquo;&lt;br&gt;&#xA;reboot, look in log, find the end of log, re-write all logs&lt;br&gt;&#xA;another crash? just repeat the logging steps&lt;br&gt;&#xA;commit needs to write on-disk log from a snapshot of cached blocks? if not, repeat but not all&lt;br&gt;&#xA;efficient using COW fork&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE14</title>
      <link>https://vzstless.moe/p/xv6-lecture14/</link>
      <pubDate>Sun, 26 Jan 2025 09:37:33 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture14/</guid>
      <description>&lt;h2 id=&#34;handout-14&#34;&gt;Handout 14&lt;/h2&gt;&#xA;&lt;p&gt;fs write first 46, then 32, 33? dirent points to free inode&lt;br&gt;&#xA;correctness and performance are often conflict&lt;br&gt;&#xA;crash recovery is a recurring problem&lt;br&gt;&#xA;logging solution: goal: fast recovery, atomic syscalls&lt;br&gt;&#xA;log, commit, install&lt;br&gt;&#xA;write-ahead log: if &amp;ldquo;done&amp;rdquo; in log, replay all writes in log, if no &amp;ldquo;done&amp;rdquo;, ignore log&lt;br&gt;&#xA;multiple data structures, lay on existing storage system, high performance&lt;br&gt;&#xA;buffer cache, in-memory log block # array, FS tree on disk, log header and blocks on disk&lt;br&gt;&#xA;write buffers, wait for disk to complete write, keep data in buffer cache&lt;br&gt;&#xA;begin_op()-&amp;gt;bmap()-&amp;gt;bread()-&amp;gt;log_write()-&amp;gt;i_update()-&amp;gt;end_op()&lt;/p&gt;</description>
    </item>
    <item>
      <title>龙芯杯讲座笔记</title>
      <link>https://vzstless.moe/p/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sat, 25 Jan 2025 11:45:07 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;龙芯杯介绍&#34;&gt;龙芯杯介绍&lt;/h2&gt;&#xA;&lt;p&gt;龙芯杯：CPU设计相关&lt;br&gt;&#xA;第9届&lt;br&gt;&#xA;loongarch类似于RISC-V&lt;/p&gt;&#xA;&lt;p&gt;初赛：CPU+L1 cache&lt;br&gt;&#xA;决赛配SoC外设和PMON BIOS&lt;br&gt;&#xA;团队赛发平台&lt;/p&gt;&#xA;&lt;p&gt;三月开始报名，八月上旬交初赛作品，八月中旬提交决赛作品&lt;br&gt;&#xA;个人赛名额不限&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE13</title>
      <link>https://vzstless.moe/p/xv6-lecture13/</link>
      <pubDate>Fri, 24 Jan 2025 08:33:35 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture13/</guid>
      <description>&lt;h2 id=&#34;handout-13&#34;&gt;Handout 13&lt;/h2&gt;&#xA;&lt;p&gt;files, bit arrays, human-readable names&lt;br&gt;&#xA;fs APIs&lt;br&gt;&#xA;fd: listed to the file even if it changes&lt;br&gt;&#xA;a file can have multiple links&lt;br&gt;&#xA;file must have info stored other than directory&lt;/p&gt;&#xA;&lt;p&gt;inode: i-number(initial version), link count, count of open FDs&lt;br&gt;&#xA;inode deallocation deferred until last link and FD are gone&lt;/p&gt;&#xA;&lt;p&gt;data stays on disk without power&lt;br&gt;&#xA;historically, disks were read/write usually in 512-byte units, called sectors&lt;/p&gt;&#xA;&lt;p&gt;in HDD, sub-sector operation are expensive(read-modify-write)&lt;br&gt;&#xA;flash must be erased before written&lt;br&gt;&#xA;xv6 uses 2-sector blocks&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE12</title>
      <link>https://vzstless.moe/p/xv6-lecture12/</link>
      <pubDate>Wed, 22 Jan 2025 14:43:23 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture12/</guid>
      <description>&lt;h2 id=&#34;handout-12&#34;&gt;Handout 12&lt;/h2&gt;&#xA;&lt;p&gt;why hold p-&amp;gt;lock across threads?&lt;br&gt;&#xA;forbid holding lock when yielding the CPU!&lt;br&gt;&#xA;threads often wait for conditions&lt;/p&gt;&#xA;&lt;p&gt;use coordination primitives&lt;br&gt;&#xA;uartwrite(): writing thread should give up CPU&lt;br&gt;&#xA;sleep() cannot simply wait the event, or will cause lose wake-up problem&lt;/p&gt;&#xA;&lt;p&gt;what&amp;rsquo;s wrong if uartwrite() releases the lock before broken_sleep()?&lt;br&gt;&#xA;uartwrite() went to sleep EVEN THOUGH UART TX WAS DONE, nothing will awake uartwrite()&lt;br&gt;&#xA;use lock to prevent wakeup() from running during the entire window&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE11</title>
      <link>https://vzstless.moe/p/xv6-lecture11/</link>
      <pubDate>Tue, 21 Jan 2025 16:58:37 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture11/</guid>
      <description>&lt;h2 id=&#34;handout-11&#34;&gt;Handout 11&lt;/h2&gt;&#xA;&lt;p&gt;concurrency: threads inside the kernel, processes&lt;br&gt;&#xA;each thread, taken alone, executes in an ordinary way&lt;br&gt;&#xA;need locks when interact&lt;/p&gt;&#xA;&lt;p&gt;in xv6, only one user-level thread&lt;br&gt;&#xA;event-driven and state machine could also use to multitasking&lt;br&gt;&#xA;executing: using resources; not executing: save and release&lt;br&gt;&#xA;each process has its own kernel thread&lt;/p&gt;&#xA;&lt;p&gt;p-&amp;gt;state: running, runnable, sleeping&lt;br&gt;&#xA;user-&amp;gt;kernel-&amp;gt;scheduler-&amp;gt;kernel-&amp;gt;user&lt;br&gt;&#xA;scheduler thread: one per CPU&lt;br&gt;&#xA;idle scheduler: no running thread&lt;br&gt;&#xA;swtch() returns to scheduler()&lt;br&gt;&#xA;swtch(): saves current registers in xx(a0), restores registers in xx(a1)&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE10</title>
      <link>https://vzstless.moe/p/xv6-lecture10/</link>
      <pubDate>Sun, 19 Jan 2025 07:11:18 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture10/</guid>
      <description>&lt;h2 id=&#34;handout-10&#34;&gt;Handout 10&lt;/h2&gt;&#xA;&lt;p&gt;kernel must deal with parallel syscalls&lt;br&gt;&#xA;race between two cores calling kfree() leads to a page losing&lt;br&gt;&#xA;if multiple cores calls the lock, only one will be returned, other will wait until the lock release&lt;br&gt;&#xA;auto locking? needs explicit comtrol over different regions of code&lt;br&gt;&#xA;deadlocking problem&lt;br&gt;&#xA;locks are often not private business of modules&lt;br&gt;&#xA;lock &amp;amp; parallelism may require a whole re-write for the project!&lt;br&gt;&#xA;use big lock first, big lock is always enough&lt;br&gt;&#xA;check and re-lock the lock atomically, pushing down the question into hardware&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE9</title>
      <link>https://vzstless.moe/p/xv6-lecture9/</link>
      <pubDate>Thu, 16 Jan 2025 23:24:27 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture9/</guid>
      <description>&lt;h2 id=&#34;handout-9&#34;&gt;Handout 9&lt;/h2&gt;&#xA;&lt;p&gt;CPU &amp;amp; devices: complicated &amp;amp; parallel&lt;br&gt;&#xA;most code in modern OSes are device drivers&lt;br&gt;&#xA;UART, RS232 port&lt;br&gt;&#xA;UART &amp;amp; FIFO: not using a busy loop, but using interrupts&lt;br&gt;&#xA;UART interrupts if: rx FIFO goes from empty to not-empty, or tx FIFO goes from full to not-full&lt;/p&gt;&#xA;&lt;p&gt;device interrupts: device -&amp;gt; PLIC -&amp;gt; trap -&amp;gt; usertrap()/kerneltrap() -&amp;gt; devintr()&lt;br&gt;&#xA;interrupt just means the state of device is changed&lt;br&gt;&#xA;the bottom-half of interrupt doesn&amp;rsquo;t run in the context of top-half&lt;br&gt;&#xA;registers: sie(supervisor interrupt enabled), PLIC claim: get next IRQ, sstatus&lt;/p&gt;</description>
    </item>
    <item>
      <title>ASM in C</title>
      <link>https://vzstless.moe/p/asm-in-c/</link>
      <pubDate>Thu, 16 Jan 2025 08:15:22 +0800</pubDate>
      <guid>https://vzstless.moe/p/asm-in-c/</guid>
      <description>&lt;h2 id=&#34;基础&#34;&gt;基础&lt;/h2&gt;&#xA;&lt;p&gt;asm是一个GNU C扩展语法的关键词，当想使用ANSI C进行编译的时候使用__asm__代替asm&lt;br&gt;&#xA;C++中默认拥有asm关键字，而当编译时使用 -fno-asm flag 时应当使用__asm__进行内联汇编操作&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE8</title>
      <link>https://vzstless.moe/p/xv6-lecture8/</link>
      <pubDate>Wed, 15 Jan 2025 10:29:46 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture8/</guid>
      <description>&lt;h2 id=&#34;handout-8&#34;&gt;Handout 8&lt;/h2&gt;&#xA;&lt;p&gt;pgtbl is hard to debug, why?&lt;br&gt;&#xA;how to speed up syscall? Linux has vDSO&lt;br&gt;&#xA;vDSO enables virtual syscalls&lt;br&gt;&#xA;511: trampoline&lt;br&gt;&#xA;510: trapframe&lt;br&gt;&#xA;509: USYSCALL&lt;/p&gt;&#xA;&lt;p&gt;protection bits? URV, WRV, XRV&lt;br&gt;&#xA;scan all pages could be expensive!!&lt;/p&gt;&#xA;&lt;h2 id=&#34;slides-8&#34;&gt;Slides 8&lt;/h2&gt;&#xA;&lt;p&gt;which syscall could be sped up?&lt;br&gt;&#xA;mo side-effect, return constant value, value can change after entering the kernel&lt;br&gt;&#xA;options: getpid() &amp;amp; uptime()&lt;/p&gt;&#xA;&lt;p&gt;provide a bitmask for pages accessed&lt;br&gt;&#xA;detect page accesses without access bits? use page fault!&lt;br&gt;&#xA;TOCTOU attack: argument is modified after the kernel reads it&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE7</title>
      <link>https://vzstless.moe/p/xv6-lecture7/</link>
      <pubDate>Tue, 14 Jan 2025 12:07:31 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture7/</guid>
      <description>&lt;h2 id=&#34;handout-7&#34;&gt;Handout 7&lt;/h2&gt;&#xA;&lt;p&gt;VM-related projects: COW, mappings, performance&lt;br&gt;&#xA;ideas: isolation, indirection&lt;br&gt;&#xA;panic? update page tables when page fault happens&lt;br&gt;&#xA;VA causes page fault: stval reg&lt;br&gt;&#xA;violation causes page fault: scause reg&lt;br&gt;&#xA;instruction/mode can also cause page fault&lt;/p&gt;&#xA;&lt;p&gt;if the user program asks for more memory, sbrk() could be expensive&lt;br&gt;&#xA;zero-filled page? large part of memory filled with zero&lt;br&gt;&#xA;COW or write then copy&lt;/p&gt;&#xA;&lt;p&gt;don&amp;rsquo;t let fork() copy every pages from parent&lt;br&gt;&#xA;but share addr space between parent and child, use RSW in PTEs&lt;br&gt;&#xA;page fault: make copy, map, read/write(hard in real life!)&lt;/p&gt;</description>
    </item>
    <item>
      <title>《算法竞赛》第四章笔记</title>
      <link>https://vzstless.moe/p/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E7%AC%AC%E5%9B%9B%E7%AB%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 13 Jan 2025 14:20:50 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E7%AC%AC%E5%9B%9B%E7%AB%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;并查集&#34;&gt;并查集&lt;/h2&gt;&#xA;&lt;p&gt;合并优化与路径压缩&lt;br&gt;&#xA;初始化：每个点属于独立的集&lt;br&gt;&#xA;合并，查找，统计集的个数&lt;br&gt;&#xA;例：hdu1213，直接使用并查集模板即可&lt;br&gt;&#xA;合并优化&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;init_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;merge_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;find_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;find_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;路径压缩：在返回时将i所属的集全部归到根节点&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE6</title>
      <link>https://vzstless.moe/p/xv6-lecture6/</link>
      <pubDate>Sun, 12 Jan 2025 16:14:43 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture6/</guid>
      <description>&lt;h2 id=&#34;handout-6&#34;&gt;Handout 6&lt;/h2&gt;&#xA;&lt;p&gt;focusing on user-&amp;gt;kernel transition&lt;br&gt;&#xA;NEVER execute user code in supervisor mode&lt;br&gt;&#xA;C on RISC-V puts function arguments in a0, a1, a2, &amp;amp;c&lt;/p&gt;&#xA;&lt;p&gt;check pagetables: C-a c, info mem&lt;br&gt;&#xA;trampoline: the start of kernel&amp;rsquo;s trap handling code&lt;br&gt;&#xA;at the top: avoid punch a hole in user addr&lt;/p&gt;&#xA;&lt;p&gt;observe PC is an indirect way to check whether we&amp;rsquo;re in supervisor mode&lt;/p&gt;&#xA;&lt;p&gt;ecall:&lt;br&gt;&#xA;change mode, save PC in SEPC, jump to STVEC, disable further interrupts&lt;br&gt;&#xA;ecall does as little as possible&lt;br&gt;&#xA;even supervisor mode is constrained to use pgtbl&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE5</title>
      <link>https://vzstless.moe/p/xv6-lecture5/</link>
      <pubDate>Thu, 09 Jan 2025 21:52:22 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture5/</guid>
      <description>&lt;h2 id=&#34;gdb&#34;&gt;GDB&lt;/h2&gt;&#xA;&lt;p&gt;step: one line of code at a time, jumps into the function&lt;br&gt;&#xA;next: jump over functions&lt;br&gt;&#xA;stepi, nexti: do same thing for asm code&lt;br&gt;&#xA;continue: run until next breakpoint&lt;br&gt;&#xA;finish: runs until the function ends&lt;/p&gt;&#xA;&lt;p&gt;break: set a breakpoint&lt;br&gt;&#xA;watch: stop whenever value changes&lt;br&gt;&#xA;x: prints the raw memory&lt;br&gt;&#xA;print: prints the expression&lt;br&gt;&#xA;info registers: print value of registers&lt;br&gt;&#xA;info frame: prints current stack frame&lt;/p&gt;&#xA;&lt;p&gt;set: change value of a variable&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE4</title>
      <link>https://vzstless.moe/p/xv6-lecture4/</link>
      <pubDate>Tue, 07 Jan 2025 18:57:30 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture4/</guid>
      <description>&lt;h2 id=&#34;handout-4&#34;&gt;Handout 4&lt;/h2&gt;&#xA;&lt;p&gt;what if a user program writes to a random part of memory?&lt;br&gt;&#xA;what way could we separate and isolate memory?&lt;br&gt;&#xA;page tables&lt;br&gt;&#xA;a level of indirection: CPU -(VM)&amp;gt; MMU -(PM)&amp;gt; MEM&lt;br&gt;&#xA;satp, MMU, kernel&lt;/p&gt;&#xA;&lt;p&gt;reduce the size of page tables, not building a direct-map&lt;/p&gt;&#xA;&lt;p&gt;page=4KB, maximum 52 bits, nowadays 27bits&lt;br&gt;&#xA;page table entry: 64 bits, 54 used, 10 of them are flags, low 12 bits of PA are from VA&lt;br&gt;&#xA;3-level page table to reduce its size&lt;br&gt;&#xA;a tree descended 9 bits at a time&lt;/p&gt;</description>
    </item>
    <item>
      <title>《算法竞赛》第三章笔记</title>
      <link>https://vzstless.moe/p/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E7%AC%AC%E4%B8%89%E7%AB%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 06 Jan 2025 10:04:13 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E7%AC%AC%E4%B8%89%E7%AB%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;bfs与dfs&#34;&gt;BFS与DFS&lt;/h2&gt;&#xA;&lt;p&gt;BFS = 队列，访问第i层节点时，第i层节点出队，第i+1层节点入队&lt;br&gt;&#xA;DFS = 递归&lt;br&gt;&#xA;DFS的常见操作：DFS时间戳，DFS序列二次输出，产生树的深度，产生子树节点总数&lt;br&gt;&#xA;先序遍历，中序遍历，后序遍历&lt;br&gt;&#xA;DFS框架：&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE3</title>
      <link>https://vzstless.moe/p/xv6-lecture3/</link>
      <pubDate>Sun, 05 Jan 2025 09:49:10 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture3/</guid>
      <description>&lt;h2 id=&#34;handout-3&#34;&gt;Handout 3&lt;/h2&gt;&#xA;&lt;p&gt;No OS: lack of isolation&lt;br&gt;&#xA;fork() -&amp;gt; abstract core&lt;br&gt;&#xA;exec()/sbrk() -&amp;gt; abstract RAM&lt;br&gt;&#xA;assumption: user is always willing to break the isolation, while kernel is always trustable&lt;br&gt;&#xA;user mode and supervisor mode&lt;br&gt;&#xA;pgtbl: maps virtual-&amp;gt;physical&lt;br&gt;&#xA;ecall: change to supervisor mode, get to a known point of the kernel code&lt;/p&gt;&#xA;&lt;p&gt;Singularity provides a way of process isolation without hardware support&lt;/p&gt;&#xA;&lt;p&gt;kernel is a big program holds all of the syscalls&lt;br&gt;&#xA;On CVE there&amp;rsquo;s 2997 bugs detected on Linux in 2024(kernel bugs are much more common than we thought)&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE2</title>
      <link>https://vzstless.moe/p/xv6-lecture2/</link>
      <pubDate>Fri, 03 Jan 2025 22:12:02 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture2/</guid>
      <description>&lt;h2 id=&#34;handout-2&#34;&gt;Handout 2&lt;/h2&gt;&#xA;&lt;p&gt;memory layout:&lt;br&gt;&#xA;text: code, read-only data&lt;br&gt;&#xA;data: global C vars&lt;br&gt;&#xA;stack: local variables&lt;br&gt;&#xA;heap: sbrk, malloc, free&lt;br&gt;&#xA;.c -compile-&amp;gt; .o -link-&amp;gt; executable file&lt;br&gt;&#xA;strlen() uses array access while strcmp() uses pointer access&lt;br&gt;&#xA;kalloc() keeps a large linked list of free pages of memory&lt;br&gt;&#xA;LRU buffer cache is implemented as a dual-pointer linked list&lt;br&gt;&#xA;static: limited to the file where the variable is declared&lt;/p&gt;&#xA;&lt;h2 id=&#34;slides&#34;&gt;Slides&lt;/h2&gt;&#xA;&lt;p&gt;This class focus on RAM and I/O&lt;br&gt;&#xA;address space: represent bus as a giant array of data&lt;br&gt;&#xA;memory allocation: decide where array to store things&lt;br&gt;&#xA;A stack is much more smaller than heap&lt;/p&gt;</description>
    </item>
    <item>
      <title>《算法竞赛》第二章笔记</title>
      <link>https://vzstless.moe/p/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 02 Jan 2025 16:43:11 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;尺取法&#34;&gt;尺取法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;反向&#34;&gt;反向&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;同向&#34;&gt;同向&lt;/h3&gt;&#xA;&lt;p&gt;例：寻找区间和：输入正整数n，数组a，正整数s，输出所有可能的a中两数字加和等于n的情况&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&amp;lt;bits/stdc++.h&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;findsum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;n&#34;&gt;findsum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;多指针&#34;&gt;多指针&lt;/h3&gt;&#xA;&lt;p&gt;两个指针不够用时使用多指针进行优化&lt;/p&gt;</description>
    </item>
    <item>
      <title>xv6 LECTURE1</title>
      <link>https://vzstless.moe/p/xv6-lecture1/</link>
      <pubDate>Wed, 01 Jan 2025 08:28:39 +0800</pubDate>
      <guid>https://vzstless.moe/p/xv6-lecture1/</guid>
      <description>&lt;h2 id=&#34;handout-1&#34;&gt;Handout 1&lt;/h2&gt;&#xA;&lt;p&gt;Purpose of an OS:&lt;/p&gt;&#xA;&lt;p&gt;Isolate hard/software, virtualize hardware&lt;br&gt;&#xA;Interact with OS via syscalls&lt;br&gt;&#xA;First arg in syscall is FD&lt;br&gt;&#xA;UNIX I/O is 8-bit bytes&lt;/p&gt;&#xA;&lt;p&gt;When CPU receives a syscall:&lt;br&gt;&#xA;save, jump, execute, call, restore, reduce, jump back&lt;/p&gt;&#xA;&lt;p&gt;Shell is a user program instead of shell&lt;br&gt;&#xA;fork() lets us create a new process&lt;br&gt;&#xA;exec() replaces current process with an executable file&lt;/p&gt;&#xA;&lt;h2 id=&#34;book-chapter-1&#34;&gt;Book Chapter 1&lt;/h2&gt;&#xA;&lt;p&gt;Operating system let different softwares use hardware together&lt;br&gt;&#xA;Process: instructions, data, stack&lt;br&gt;&#xA;fork() returns 0 in the child process while pid in the parent process&lt;br&gt;&#xA;wait() returns the pid and copies the exit status&lt;br&gt;&#xA;exec() loads a file and executes it&lt;/p&gt;</description>
    </item>
    <item>
      <title>商学的死亡</title>
      <link>https://vzstless.moe/p/%E5%95%86%E5%AD%A6%E7%9A%84%E6%AD%BB%E4%BA%A1/</link>
      <pubDate>Mon, 30 Dec 2024 08:08:50 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E5%95%86%E5%AD%A6%E7%9A%84%E6%AD%BB%E4%BA%A1/</guid>
      <description>&lt;p&gt;理论上一个计算机都快学不明白的人不应该对外行的见识发表暴论，但既然学校选择了力推外专业“选修”，不修毕不了业，那我就不先礼后兵了&lt;br&gt;&#xA;许多人现如今已经不太看重所谓的MBA或者别的类似的商学学位，认为它们纯纯是二水货，事实证明他们没错。商学的死不是因为商学被什么别的哲学取代了，而是商学被计算机从思维意义上被取代了。这时候你大概率要问：是计算机代替了人力参与了商学相关的事务了吗？是也不是，因为不只是人类意义上的代替，还有思想层面的代替。&lt;br&gt;&#xA;几乎所有的管理学相关的思想在计算机哲学中都能找到代替品，而且研究层面上更加极端。流水线优化与对节拍异化为了CPU流水线性能优化，工作中心分配异化为了操作系统中的线程调度优化，公交线路布局异化为了找最长路径，观察次数异化为了单纯的统计题，工序优化异化为了对一个有向图进行拓扑排序，至于剩下的，大概率交给Excel或者大模型都可以完成。从思想和实践层面，计算机科学都直接毙掉了商学。&lt;br&gt;&#xA;也许商学的下一步应该把&lt;em&gt;UNIX编程艺术&lt;/em&gt;列为必读书目？但总之不应该是罗宾斯管理学这种老东西了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Hacking</title>
      <link>https://vzstless.moe/google-hacking/</link>
      <pubDate>Sat, 28 Dec 2024 08:25:40 +0800</pubDate>
      <guid>https://vzstless.moe/google-hacking/</guid>
      <description>&lt;h2 id=&#34;google&#34;&gt;Google&lt;/h2&gt;&#xA;&lt;p&gt;+ 强制搜索后方的单词&lt;br&gt;&#xA;- 忽略关键词&lt;br&gt;&#xA;~ 同义词&lt;br&gt;&#xA;. 单一通配符&lt;br&gt;&#xA;* 通配符，可以代表多个字符&lt;br&gt;&#xA;&amp;quot;&amp;quot; 精确查询&lt;br&gt;&#xA;| OR 符合一个就显示&lt;br&gt;&#xA;Intext:key 搜索网页上某个关键字的页面&lt;br&gt;&#xA;Allintext:key 可以键入多个关键字&lt;br&gt;&#xA;intitle:key 搜索网页标题中是否有关键字&lt;br&gt;&#xA;Allintitle:key 同理&lt;br&gt;&#xA;cache:url 查看URL快照&lt;br&gt;&#xA;filetype: 搜索指定类型文件&lt;br&gt;&#xA;info: 相关信息&lt;br&gt;&#xA;inurl: 搜索结果是否在URL中，可与info结合进行后台查询&lt;br&gt;&#xA;site: 搜索域名及其子域名&lt;br&gt;&#xA;related URL: 与这个URL相关的页面&lt;/p&gt;</description>
    </item>
    <item>
      <title>漏洞扫描</title>
      <link>https://vzstless.moe/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/</link>
      <pubDate>Sat, 28 Dec 2024 07:53:00 +0800</pubDate>
      <guid>https://vzstless.moe/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/</guid>
      <description>&lt;h2 id=&#34;nikto&#34;&gt;Nikto&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nikto -host http://&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -c /sqli-labs -o /usr/result.html -F htm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;对靶机的sqli-labs进行扫描，并将结果保存至result.html中&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nikto -host http://&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -mutate &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; -mutate-option /usr/sub.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;根据sub.txt字典中的子域名选项进行子域名扫描&lt;/p&gt;</description>
    </item>
    <item>
      <title>密码学相关工具</title>
      <link>https://vzstless.moe/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 26 Dec 2024 21:33:00 +0800</pubDate>
      <guid>https://vzstless.moe/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;h2 id=&#34;hashcat&#34;&gt;Hashcat&lt;/h2&gt;&#xA;&lt;p&gt;-a 0 字典破解; -a 1 组合破解; -a 3 掩码暴力破解;&lt;br&gt;&#xA;-a 6 字典+掩码破解; -a 7 掩码+字典破解&lt;br&gt;&#xA;-m 规定hash类型&lt;br&gt;&#xA;掩码字符集：&lt;br&gt;&#xA;?l 小写字母; ?u 大写字母; ?d 十进制数字; ?h小写十六进制数字;&lt;br&gt;&#xA;?H大写十六进制数字; ?s 特殊字符; ?a 键盘上的可见字符; ?b 0x00-0xff&lt;/p&gt;</description>
    </item>
    <item>
      <title>计网All-in-One</title>
      <link>https://vzstless.moe/%E8%AE%A1%E7%BD%91all-in-one/</link>
      <pubDate>Sat, 21 Dec 2024 15:31:11 +0800</pubDate>
      <guid>https://vzstless.moe/%E8%AE%A1%E7%BD%91all-in-one/</guid>
      <description>&lt;h2 id=&#34;分类&#34;&gt;分类&lt;/h2&gt;&#xA;&lt;p&gt;星型结构：易于组网，中心节点瘫痪会导致整个网络瘫痪&lt;br&gt;&#xA;环型结构：没有路径选择问题，但某个节点故障直接影响网络通信，网络吞吐能力差&lt;br&gt;&#xA;网型结构：可靠程度高，但是布线成本高&lt;br&gt;&#xA;树形结构：网络总长度较短，但层级越高的节点可靠性要求越高&lt;br&gt;&#xA;总线结构：网络业务容易扩展，但是故障排查成本大&lt;/p&gt;</description>
    </item>
    <item>
      <title>信息搜集</title>
      <link>https://vzstless.moe/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</link>
      <pubDate>Sat, 21 Dec 2024 08:33:05 +0800</pubDate>
      <guid>https://vzstless.moe/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</guid>
      <description>&lt;h3 id=&#34;信息查询&#34;&gt;信息查询&lt;/h3&gt;&#xA;&lt;h4 id=&#34;子域名查询&#34;&gt;子域名查询&lt;/h4&gt;&#xA;&lt;p&gt;域名反查工具：&lt;a href=&#34;https://tool.chinaz.com/&#34;&gt;站长之家&lt;/a&gt;&#xA;域名查询指令&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;whois &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;URL&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;DNS解析指令&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dig &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;URL&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;查找负责解析的DNS主机&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dig &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;URL&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; @m.n.p.q&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;查找NS记录&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dig &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;URL&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; NS&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;查找TXT记录&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dig &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;URL&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; TXT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;多地ping&#xA;&lt;a href=&#34;http://ping.chinaz.com&#34;&gt;查看域名真实IP&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;子域名爆破&#34;&gt;子域名爆破&lt;/h4&gt;&#xA;&lt;h5 id=&#34;subdomainsbrute&#34;&gt;subDomainsBrute&lt;/h5&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 subDomainsBrute.py --full -t &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;URL&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -w&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;其中&amp;ndash;full为全部扫描，-t为使用线程数，-w为扩展扫描&lt;/p&gt;</description>
    </item>
    <item>
      <title>文件包含相关</title>
      <link>https://vzstless.moe/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Fri, 20 Dec 2024 20:45:05 +0800</pubDate>
      <guid>https://vzstless.moe/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9B%B8%E5%85%B3/</guid>
      <description>&lt;h3 id=&#34;文件名后缀检测与绕过&#34;&gt;文件名后缀检测与绕过&lt;/h3&gt;&#xA;&lt;h4 id=&#34;一般思路&#34;&gt;一般思路&lt;/h4&gt;&#xA;&lt;p&gt;.php -&amp;gt; 更换大小写 -&amp;gt; Windows可使用末尾增加.或者空格或者::$DATA进行过滤绕过 -&amp;gt; Apache可使用&lt;code&gt;SetHandler application/x-httpd-php&lt;/code&gt;进行任意文件绕过 -&amp;gt; MIME绕过 -&amp;gt; 图片马&lt;/p&gt;</description>
    </item>
    <item>
      <title>速查表</title>
      <link>https://vzstless.moe/%E9%80%9F%E6%9F%A5%E8%A1%A8/</link>
      <pubDate>Fri, 20 Dec 2024 20:27:00 +0800</pubDate>
      <guid>https://vzstless.moe/%E9%80%9F%E6%9F%A5%E8%A1%A8/</guid>
      <description>&lt;h3 id=&#34;xss&#34;&gt;XSS&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;666&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;javascript:alert(666)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;touch me!&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onerror&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;alert(666)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;alert(666)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;变体：改大小写，加引号，斜杠代替空格，使用回车与换行符，使用编码&lt;/p&gt;&#xA;&lt;h3 id=&#34;管道符&#34;&gt;管道符&lt;/h3&gt;&#xA;&lt;h4 id=&#34;linux常用管道符&#34;&gt;Linux常用管道符：&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code&gt;;前面的执行完执行后面的&#xD;&#xA;|显示后面的执行结果&#xD;&#xA;||当前面的执行出错时执行后面的&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;windows常用管道符&#34;&gt;Windows常用管道符&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;amp;前面的语句为假则直接执行后面的&#xD;&#xA;&amp;amp;&amp;amp;前面的语句为假则直接出错，后面的也不执行&#xD;&#xA;|直接执行后面的语句&#xD;&#xA;||前面出错执行后面的&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;危险函数与常量&#34;&gt;危险函数与常量&lt;/h3&gt;&#xA;&lt;h4 id=&#34;php中常见代码执行函数&#34;&gt;PHP中常见代码执行函数：&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code&gt;array_map()&#xD;&#xA;eval()&#xD;&#xA;assert()&#xD;&#xA;preg_replace()&#xD;&#xA;call_user_func()&#xD;&#xA;$a($b)动态函数&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;php中常见系统命令执行函数&#34;&gt;PHP中常见系统命令执行函数：&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code&gt;system()&#xD;&#xA;exec()&#xD;&#xA;shell_exec()&#xD;&#xA;passthru()&#xD;&#xA;popen()&#xD;&#xA;反引号&amp;quot;`&amp;quot;&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;危险常量&#34;&gt;危险常量&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;no&#34;&gt;__LINE__&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;//文件中的当前行号&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__FILE__&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;//文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__DIR__&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__FUNCTION__&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;//该常量所在的函数名称（PHP 4.3.0 新加）。自PHP5起本常量返回该函数被定义时的名字（区分大小写）。在PHP4中该值总是小写字母的&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__CLASS__&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;//该类被定义时的名字（PHP 4.3.0 新加）。自PHP5起本常量返回该类被定义时的名字（区分大小写）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__TRAIT__&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;//Trait的名字（PHP 5.4.0 新加）。自PHP5.4.0起，PHP实现了代码复用的一个方法，称为traits&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__METHOD__&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//类的方法名（PHP 5.0.0 新加）。返回该方法被定义时的名字（区分大小写）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__NAMESPACE__&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//当前命名空间的名称（区分大小写）。此常量是在编译时定义的（PHP 5.3.0 新增）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;一句话系列&#34;&gt;一句话系列&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;phpinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;查看配置信息（注：php报错时会暴露绝对路径）&lt;/p&gt;</description>
    </item>
    <item>
      <title>Metasploit</title>
      <link>https://vzstless.moe/metasploit/</link>
      <pubDate>Thu, 19 Dec 2024 21:25:05 +0800</pubDate>
      <guid>https://vzstless.moe/metasploit/</guid>
      <description>&lt;h3 id=&#34;metasploit&#34;&gt;Metasploit&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;msfdb init &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; msfconsole&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;启动MSF&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;search &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;vul_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;module_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;show options&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; RHOSTS &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;run&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;检测靶机是否存在漏洞&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;use &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;module_name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; RHOST &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;dest_IP&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; LHOST &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;src_IP&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; payload &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;PAYLOAD_NAME&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; RPORT &lt;span class=&#34;m&#34;&gt;445&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; target &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;run    //执行&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;进行漏洞利用&lt;/p&gt;</description>
    </item>
    <item>
      <title>nmap</title>
      <link>https://vzstless.moe/nmap/</link>
      <pubDate>Thu, 19 Dec 2024 21:25:05 +0800</pubDate>
      <guid>https://vzstless.moe/nmap/</guid>
      <description>&lt;h3 id=&#34;nmap&#34;&gt;nmap&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nmap -sP &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;主机存活检测&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nmap -p T:1-65535,U:1-65535 -sS -sU &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;主机全端口扫描&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nmap -sV -O &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;主机程序版本和操作系统侦测&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nmap -p &lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; -sS &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;IP&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;对主机80端口进行TCP SYN扫描。nmap向目标端口发送TCP SYN报文，如果目标机返回TCP SYN+ACK报文，则说明目标端口处于开放状态，同时nmap会紧接着向目标机发送TCP RST报文以重置此连接；如果目标机返回TCP RST+ACK报文，则说明目标端口处于关闭状态。&lt;/p&gt;</description>
    </item>
    <item>
      <title>openssl</title>
      <link>https://vzstless.moe/openssl/</link>
      <pubDate>Thu, 19 Dec 2024 21:25:05 +0800</pubDate>
      <guid>https://vzstless.moe/openssl/</guid>
      <description>&lt;p&gt;这里只收录openssl中关于密码学的内容&lt;/p&gt;&#xA;&lt;h4 id=&#34;rc4加解密&#34;&gt;rc4加解密&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl enc -e -rc4 -in test.txt -out test_rc4.enc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;加密&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl enc -d -rc4 -in test_rc4.enc -out test_rc4.dm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;解密&lt;/p&gt;&#xA;&lt;h4 id=&#34;aes加解密&#34;&gt;AES加解密&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl enc -e -aes-128-cbc -a -salt -in test.txt -out test_aes128.enc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;加密&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl enc -d -aes-128-cbc -a -salt -in test_aes128.enc -out test_aes128.d&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;解密&lt;/p&gt;</description>
    </item>
    <item>
      <title>sqlmap</title>
      <link>https://vzstless.moe/sqlmap/</link>
      <pubDate>Thu, 19 Dec 2024 21:25:05 +0800</pubDate>
      <guid>https://vzstless.moe/sqlmap/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python sqlmap.py -h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;查看帮助&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python sqlmap.py -u &lt;span class=&#34;s2&#34;&gt;&amp;#34;URL&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;寻找注入点&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python sqlmap.py -u &lt;span class=&#34;s2&#34;&gt;&amp;#34;URL&amp;#34;&lt;/span&gt; --dbs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;获取数据库库名&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python sqlmap.py -u &lt;span class=&#34;s2&#34;&gt;&amp;#34;URL&amp;#34;&lt;/span&gt; --current-db&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;获取当前数据库库名&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python sqlmap.py -u &lt;span class=&#34;s2&#34;&gt;&amp;#34;URL&amp;#34;&lt;/span&gt; -D security --tables&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;获取security库下的所有表名&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python sqlmap.py -u &lt;span class=&#34;s2&#34;&gt;&amp;#34;URL&amp;#34;&lt;/span&gt; -D security -T users --columns&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;获取字段名&lt;/p&gt;</description>
    </item>
    <item>
      <title>系数为±1的n次方程根在复平面的分布</title>
      <link>https://vzstless.moe/p/%E7%B3%BB%E6%95%B0%E4%B8%BA1%E7%9A%84n%E6%AC%A1%E6%96%B9%E7%A8%8B%E6%A0%B9%E5%9C%A8%E5%A4%8D%E5%B9%B3%E9%9D%A2%E7%9A%84%E5%88%86%E5%B8%83/</link>
      <pubDate>Wed, 18 Dec 2024 21:38:49 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E7%B3%BB%E6%95%B0%E4%B8%BA1%E7%9A%84n%E6%AC%A1%E6%96%B9%E7%A8%8B%E6%A0%B9%E5%9C%A8%E5%A4%8D%E5%B9%B3%E9%9D%A2%E7%9A%84%E5%88%86%E5%B8%83/</guid>
      <description>&lt;p&gt;（一篇在分享会上的稿件的留档）&lt;/p&gt;&#xA;&lt;h3 id=&#34;引子&#34;&gt;引子&lt;/h3&gt;&#xA;&lt;p&gt;Mathematica的基础语法三句话就能解决：&lt;/p&gt;&#xA;&lt;p&gt;1.内置函数的每个单词以大写字母开头。&lt;/p&gt;&#xA;&lt;p&gt;2.函数用[]传参。&lt;/p&gt;&#xA;&lt;p&gt;3.List用{}包围。&lt;/p&gt;</description>
    </item>
    <item>
      <title>生产力与生产关系</title>
      <link>https://vzstless.moe/p/%E7%94%9F%E4%BA%A7%E5%8A%9B%E4%B8%8E%E7%94%9F%E4%BA%A7%E5%85%B3%E7%B3%BB/</link>
      <pubDate>Mon, 16 Dec 2024 21:51:39 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E7%94%9F%E4%BA%A7%E5%8A%9B%E4%B8%8E%E7%94%9F%E4%BA%A7%E5%85%B3%E7%B3%BB/</guid>
      <description>&lt;p&gt;注：以下讨论不涉及C，Python和JavaScript，因为你不用也得用，迟早有一天你会被这仨语言中的一个找上茬儿&lt;/p&gt;&#xA;&lt;p&gt;马原课本告诉我们，生产力决定生产关系，生产关系反作用于生产力。我们可以使用这个理论来给计算机行业中的错误思想套公式。现在许多人中流传着Java焦虑，好像Java死了我的工作就彻底寄了，然后经典的中年危机就业焦虑。然而大概率事实是不是Java不行，而是你从始至终就没入行。换语言不会使你干好，反而你长期囿于原先的生产关系而没有意识到自己的生产力本身落后，换了语言，原形毕露，没有论坛可查，自己失去了debug和查找性能瓶颈的能力。类似的还有软件工程。首先，你大概率不是CEO之类的要职，而你的第一个demo做得并不好甚至没做出来，你就觉得现在的软件生产模型不行，想从瀑布模型转变成敏捷模型。然而你没注意到敏捷模型对生产力的要求是达到了一定境界的，你的生产力并不足以满足敏捷模型短期迭代的内在要求，大概率结局是项目流产。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于一些网络热门课程</title>
      <link>https://vzstless.moe/p/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%BA%9B%E7%BD%91%E7%BB%9C%E7%83%AD%E9%97%A8%E8%AF%BE%E7%A8%8B/</link>
      <pubDate>Sun, 15 Dec 2024 13:38:47 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%BA%9B%E7%BD%91%E7%BB%9C%E7%83%AD%E9%97%A8%E8%AF%BE%E7%A8%8B/</guid>
      <description>&lt;p&gt;事先声明，锐评不代表讨厌，相反，正是因为你有了足够的了解之后你才能知道为啥人家的课程好，我们的为什么烂。我感谢它们，在无数节水课中带我消磨时间，做有趣的事情。&lt;/p&gt;</description>
    </item>
    <item>
      <title>《算法竞赛》第一章笔记</title>
      <link>https://vzstless.moe/p/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E7%AC%AC%E4%B8%80%E7%AB%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 11 Dec 2024 10:17:29 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E7%AC%AC%E4%B8%80%E7%AB%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h3 id=&#34;单调栈&#34;&gt;单调栈&lt;/h3&gt;&#xA;&lt;p&gt;栈中元素从栈顶到栈底依次递增&lt;br&gt;&#xA;一个新数字进栈前要弹出所有比它小的数，所有数字都入栈&lt;br&gt;&#xA;例题：洛谷P2947&lt;/p&gt;&#xA;&lt;h3 id=&#34;哈夫曼编码&#34;&gt;哈夫曼编码&lt;/h3&gt;&#xA;&lt;p&gt;原理略&lt;br&gt;&#xA;例题：poj 1521&lt;/p&gt;&#xA;&lt;h3 id=&#34;优先队列与堆&#34;&gt;优先队列与堆&lt;/h3&gt;&#xA;&lt;p&gt;使用priority_queue可以避免手动管理堆的实现代码&lt;br&gt;&#xA;例题：洛谷P3378&lt;br&gt;&#xA;重点是中间的&lt;code&gt;priority_queue&amp;lt;int, vector&amp;lt;int&amp;gt;, greater&amp;lt;int&amp;gt;&amp;gt; q;&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>转移中的故事</title>
      <link>https://vzstless.moe/%E8%BD%AC%E7%A7%BB%E4%B8%AD%E7%9A%84%E6%95%85%E4%BA%8B/</link>
      <pubDate>Wed, 11 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://vzstless.moe/%E8%BD%AC%E7%A7%BB%E4%B8%AD%E7%9A%84%E6%95%85%E4%BA%8B/</guid>
      <description>&lt;h2 id=&#34;20241211&#34;&gt;2024.12.11&lt;/h2&gt;&#xA;&lt;p&gt;确切来讲，这个博客的转移拖得太久太久了。最开始我用的Hexo框架弄，结果Hexo在20年之后的几乎所有issue都在痛骂这个框架，帮助信息也是没几个正经的。我年中弄这个框架的时候就受不了两点，一是你一个博客框架在我电脑开性能模式下还敢狂转风扇你也是没谁了，二是这玩意儿的定制化程度低得可怕。我想把Hexo主页最上方的地球图片换了，结果前脚改完配置文件后脚一生成发布版就给我改回去了。牛的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>单周期处理器（LA）讲座笔记</title>
      <link>https://vzstless.moe/p/%E5%8D%95%E5%91%A8%E6%9C%9F%E5%A4%84%E7%90%86%E5%99%A8la%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 10 Dec 2024 16:55:17 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E5%8D%95%E5%91%A8%E6%9C%9F%E5%A4%84%E7%90%86%E5%99%A8la%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;单周期处理器la版本&#34;&gt;单周期处理器（LA版本）&lt;/h2&gt;&#xA;&lt;p&gt;延迟槽：曾几何时它很好，然而它非但无法解决延迟造成的流水线阻塞问题，而且会使微结构的设计复杂化，而且编译器并不能总是提取出有效指令填入流水线导致流水线中出现过量空指令，影响流水线性能&lt;/p&gt;</description>
    </item>
    <item>
      <title>一分钟上手Sublime</title>
      <link>https://vzstless.moe/p/%E4%B8%80%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8Bsublime/</link>
      <pubDate>Tue, 10 Dec 2024 16:52:35 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E4%B8%80%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8Bsublime/</guid>
      <description>&lt;p&gt;（注：这篇文章成文于一年前，放在博客上只是为了留档）&lt;/p&gt;&#xA;&lt;p&gt;最开始接触这玩意儿其实是因为前端（一朝做贼，再想做好人可不容易啊），菜鸟教程推荐的编辑器里头有VSCode，Sublime和WebStorm，这仨里头VSC配C的环境给我配出心理阴影了，而且这玩意儿甚至原生不支持ctrl+滚轮缩放字体。WS要钱，一年两千八，我说我别tm做个前端还得贴钱打工，于是选了Sublime，不得不承认这玩意儿确实好使得一批，现在除了C，Python和Mathematica直接Sublime+命令行，真正做到了有高亮有编译器就能写。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Csapp Chapter4</title>
      <link>https://vzstless.moe/p/csapp-chapter4/</link>
      <pubDate>Tue, 10 Dec 2024 16:44:47 +0800</pubDate>
      <guid>https://vzstless.moe/p/csapp-chapter4/</guid>
      <description>&lt;h2 id=&#34;41&#34;&gt;4.1&lt;/h2&gt;&#xA;&lt;h3 id=&#34;prelude&#34;&gt;prelude&lt;/h3&gt;&#xA;&lt;p&gt;PC holds the address of the instruction that currently executed.&lt;/p&gt;&#xA;&lt;p&gt;registers, base pointer, stack pointer&lt;/p&gt;&#xA;&lt;p&gt;condition code: ZF, SF, OF&lt;/p&gt;&#xA;&lt;p&gt;memory(monolithic byte array)&lt;/p&gt;&#xA;&lt;p&gt;Types of encoding the Y-86 instructions:&lt;/p&gt;&#xA;&lt;p&gt;I-type, D-type and B-type&lt;/p&gt;&#xA;&lt;h3 id=&#34;instructions&#34;&gt;instructions&lt;/h3&gt;&#xA;&lt;p&gt;movq is split: I, R, M -&amp;gt; R, M&lt;/p&gt;&#xA;&lt;p&gt;AL instructions: addq, subq, andq, xorq (as there is no zero register in Y-86 processor, you must add an xorq instruction)&lt;/p&gt;&#xA;&lt;p&gt;jumps: jmp, &amp;lt;=, &amp;lt;, ==, !=, &amp;gt;=, &amp;gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Whoami</title>
      <link>https://vzstless.moe/p/whoami/</link>
      <pubDate>Mon, 09 Dec 2024 20:45:32 +0800</pubDate>
      <guid>https://vzstless.moe/p/whoami/</guid>
      <description>&lt;p&gt;(This is the first version of my README)&lt;/p&gt;&#xA;&lt;h1 id=&#34;vzstless-as-your-friend-or-thinker&#34;&gt;VZstless as your friend or thinker&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;🍥 Call this name as VictorZhang was signed up by somebody else&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;👻 Love frontend in any perspective, digital, or web.&lt;/li&gt;&#xA;&lt;li&gt;🐣 Libre &amp;amp; OpenSource aholic.&lt;/li&gt;&#xA;&lt;li&gt;⭐ Still an undergraduate and a crazyone.&lt;/li&gt;&#xA;&lt;li&gt;🐧 A human-like history book or cheatsheet.&lt;/li&gt;&#xA;&lt;li&gt;✉️ &lt;a href=&#34;mailto:2319725508@qq.com&#34;&gt;2319725508@qq.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;🍀I work so I live.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://skillicons.dev/icons?i=arch,ubuntu,debian,bash,powershell,cloudflare,python,javascript,scala,go,c,haskell,ts,react,fastapi,git,github,githubactions,notion,ps,redis,vscode,vim,azure&#34; alt=&#34;skills&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats-one-bice.vercel.app/api?username=victorzhangai&amp;count_private=true&amp;theme=calm&amp;show_icons=true&amp;include_all_commits=true&amp;role=OWNER,ORGANIZATION_MEMBER,COLLABORATOR&#34; alt=&#34;Where had I walked&#34; height=&#34;185px&#34; /&gt; &lt;!-- img src=&#34;https://github-readme-stats-one-bice.vercel.app/api/top-langs/?username=victorzhangai&amp;layout=compact&amp;langs_count=8&amp;theme=calm&amp;role=OWNER,ORGANIZATION_MEMBER&#34; alt=&#34;Mostly Used&#34; height=&#34;185px&#34; / --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Archives</title>
      <link>https://vzstless.moe/archives/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>https://vzstless.moe/archives/</guid>
      <description></description>
    </item>
    <item>
      <title>Links</title>
      <link>https://vzstless.moe/links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://vzstless.moe/links/</guid>
      <description>&lt;p&gt;一些友链，包括论坛或者正在心水的工具&lt;/p&gt;&#xA;&lt;p&gt;如果你也想把友链加在这里可以电邮call我&lt;/p&gt;</description>
    </item>
    <item>
      <title>Search</title>
      <link>https://vzstless.moe/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://vzstless.moe/search/</guid>
      <description></description>
    </item>
    <item>
      <title>Who Am I</title>
      <link>https://vzstless.moe/_index.zh-cn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://vzstless.moe/_index.zh-cn/</guid>
      <description>&lt;h1 id=&#34;vzstless-as-your-friend-or-thinker&#34;&gt;VZstless as your friend or thinker&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;🍥 Call this name as VictorZhang was signed up by somebody else&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;👻 Love frontend in any perspective, digital, or web.&lt;/li&gt;&#xA;&lt;li&gt;🐣 Libre &amp;amp; OpenSource aholic.&lt;/li&gt;&#xA;&lt;li&gt;⭐ Still an undergraduate and a crazyone.&lt;/li&gt;&#xA;&lt;li&gt;🐧 A human-like history book or cheatsheet.&lt;/li&gt;&#xA;&lt;li&gt;✉️ &lt;a href=&#34;mailto:2319725508@qq.com&#34;&gt;2319725508@qq.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;🍀I work so I live.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;GPG Public Key: 81F97A3DCC8ACF8128F6FBF6D96D94E92C64A252&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://vzstless.moe&#34;&gt;blog&lt;/a&gt;&#xA;&lt;a href=&#34;https://vzstless.notion.site/Hi-VZstless-here-18cfefdbc8d98017965ff458ec105c76&#34;&gt;notion&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://skillicons.dev/icons?i=arch,ubuntu,debian,nix,plan9,bash,powershell,cloudflare,python,julia,javascript,scala,go,c,haskell,ts,regex,react,fastapi,git,github,githubactions,notion,ps,htmx,jquery,vscode,vim,azure,emacs,&#34; alt=&#34;skills&#34;&gt;&lt;/p&gt;&#xA;&lt;img src=&#34;https://github-readme-stats-one-bice.vercel.app/api?username=victorzhangai&amp;count_private=true&amp;theme=calm&amp;show_icons=true&amp;include_all_commits=true&amp;role=OWNER,ORGANIZATION_MEMBER,COLLABORATOR&#34; alt=&#34;Where had I walked&#34; height=&#34;185px&#34; /&gt;</description>
    </item>
  </channel>
</rss>
